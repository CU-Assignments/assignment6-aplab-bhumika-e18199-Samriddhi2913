### Two Stack Using One Array
#include <iostream>
using namespace std;

class TwoStacks {
private:
    int* arr;
    int size;
    int top1, top2;

public:
    TwoStacks(int n) {
        size = n;
        arr = new int[size];
        top1 = -1;        // Stack 1 
        top2 = size;      // Stack 2 
    }

    void push1(int x) {
        if (top1 + 1 < top2) {
            arr[++top1] = x;
            cout << x << " pushed to Stack 1\n";
        } else {
            cout << "Stack Overflow - Cannot push " << x << " to Stack 1\n";
        }
    }

    void push2(int x) {
        if (top1 + 1 < top2) {
            arr[--top2] = x;
            cout << x << " pushed to Stack 2\n";
        } else {
            cout << "Stack Overflow - Cannot push " << x << " to Stack 2\n";
        }
    }

    void pop1() {
        if (top1 >= 0) {
            cout << arr[top1--] << " popped from Stack 1\n";
        } else {
            cout << "Stack Underflow - Stack 1 is empty\n";
        }
    }

    void pop2() {
        if (top2 < size) {
            cout << arr[top2++] << " popped from Stack 2\n";
        } else {
            cout << "Stack Underflow - Stack 2 is empty\n";
        }
    }

    ~TwoStacks() {
        delete[] arr;
    }
};

int main() {
    TwoStacks ts(6);

    ts.push1(10);
    ts.push1(20);
    ts.push2(30);
    ts.push2(40);
    ts.push1(50);
    ts.push2(60);

    ts.pop1();
    ts.pop2();


    return 0;
}
