### Implement Stack Using Queue

#include <iostream>
#include <queue>

using namespace std;

class StackUsingQueue {
private:
    queue<int> q1;

public:
    // Performing Push operation on stack
    void push(int x) {
        int size = q1.size();
        q1.push(x);

        for (int i = 0; i < size; i++) {
            q1.push(q1.front());
            q1.pop();
        }
    }

    // Performing Pop operation in stack
    void pop() {
        if (q1.empty()) {
            cout << "Stack is empty!" << endl;
            return;
        }
        q1.pop();
    }

    // Performing top operation on stack
    int top() {
        if (q1.empty()) {
            cout << "Stack is empty!" << endl;
            return -1;
        }
        return q1.front();
    }

    //Checking if stack is empty
    bool isEmpty() {
        return q1.empty();
    }
};

int main() {
    StackUsingQueue st;
    
    st.push(10);
    st.push(20);
    st.push(30);
    
    cout << "Top: " << st.top() << endl; 
    st.pop();
    cout << "Top after pop: " << st.top() << endl; 

    return 0;
}
